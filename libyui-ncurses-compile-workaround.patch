diff -up libyui-ncurses-master/src/YNCursesUI.cc.omv~ libyui-ncurses-master/src/YNCursesUI.cc
--- libyui-ncurses-master/src/YNCursesUI.cc.omv~	2018-12-06 23:55:48.194165712 +0100
+++ libyui-ncurses-master/src/YNCursesUI.cc	2018-12-06 23:55:57.979188677 +0100
@@ -427,25 +427,3 @@ void YNCursesUI::setConsoleFont( const s
 	Refresh();
     }
 }
-
-
-YWidget * YNCursesUI::askSendWidgetID()
-{
-    std::string id = NCPopupTextEntry::askForText( wpos( 0, 0 ),
-                                                   _("Enter Widget ID:"), // label
-                                                   "" ); // initial text
-
-    if ( ! id.empty() )
-    {
-        try
-        {
-            return sendWidgetID( id );
-        }
-        catch ( YUIWidgetNotFoundException & ex )
-        {
-            YUI_CAUGHT( ex );
-        }
-    }
-
-    return 0;
-}
diff -up libyui-ncurses-master/src/YNCursesUI.h.omv~ libyui-ncurses-master/src/YNCursesUI.h
--- libyui-ncurses-master/src/YNCursesUI.h.omv~	2018-12-06 23:55:59.740192806 +0100
+++ libyui-ncurses-master/src/YNCursesUI.h	2018-12-06 23:56:07.280210478 +0100
@@ -118,12 +118,6 @@ public:
      * (including loading the plugin lib) if it does not exist yet.
      **/
     NCPackageSelectorPluginStub * packageSelectorPlugin();
-
-    /**
-     * Open a pop-up dialog to ask the user for a widget ID and then send it
-     * with sendWidgetID(). This returns the widget or 0 if not found.
-     **/
-    YWidget * askSendWidgetID();
 };
 
 
diff -up libyui-ncurses-master/src/NCDialog.cc.omv~ libyui-ncurses-master/src/NCDialog.cc
--- libyui-ncurses-master/src/NCDialog.cc.omv~	2018-12-06 23:58:31.055544788 +0100
+++ libyui-ncurses-master/src/NCDialog.cc	2018-12-06 23:58:44.487575786 +0100
@@ -1099,24 +1099,6 @@ void NCDialog::processInput( int timeout
 
 		break;
 
-	    case KEY_F( 18 ): // = Shift-F6 on e.g. a linux console
-                {
-                    yuiMilestone() << "Asking for widget ID" << std::endl;
-                    YWidget * widget = YNCursesUI::ui()->askSendWidgetID();
-
-                    if ( widget )
-                    {
-                        NCPushButton * button = dynamic_cast<NCPushButton *>( widget );
-
-                        if ( button )
-                        {
-                            Activate( *button );
-                            pendingEvent = getInputEvent( KEY_RETURN );
-                        }
-                    }
-                }
-		break;
-
 	    case CTRL( 'D' ):
 		hch = getch( -1 );
 
